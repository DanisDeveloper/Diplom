<template>
  <transition name="slide-fade">
    <div v-if="visible" class="toast">
      <div class="message">{{ message }}</div>
      <div class="progress-bar" :style="{ width: progress + '%' }"></div>
    </div>
  </transition>
</template>

<script>
export default {
  name: 'ErrorToast',
  props: {
    message: {
      type: String,
      required: true,
    },
    duration: {
      type: Number,
      default: 5000, // миллисекунды
    },
  },
  data() {
    return {
      visible: false,
      progress: 100,
      intervalId: null,
    };
  },
  methods: {
    show() {
      this.visible = true;
      this.progress = 100;

      const step = 100 / (this.duration / 100);
      this.intervalId = setInterval(() => {
        this.progress -= step;
        if (this.progress <= 0) {
          this.close();
        }
      }, 100);
    },
    close() {
      clearInterval(this.intervalId);
      this.visible = false;
    },
  },
  mounted() {
    this.show();
  },
  beforeUnmount() {
    clearInterval(this.intervalId);
  },
};
</script>

<style scoped>
.toast {
  position: fixed;
  right: 20px;
  bottom: 20px;
  background-color: #f44336;
  color: white;
  padding: 16px 24px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  min-width: 240px;
  max-width: 300px;
  overflow: hidden;
  z-index: 1000;
}

.message {
  margin-bottom: 8px;
}

.progress-bar {
  height: 4px;
  background-color: rgba(255, 255, 255, 0.7);
  transition: width 0.1s linear;
}

.slide-fade-enter-active,
.slide-fade-leave-active {
  transition: all 0.5s ease;
}

.slide-fade-enter-from,
.slide-fade-leave-to {
  opacity: 0;
  transform: translateY(100%);
}
</style>
